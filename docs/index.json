[{"content":"You have a theme you added as a git submodule and you recently re-cloned your project. In order to fix this, your submodule needs to be re-downloaded as well.\nRun the following commands:\ngit submodule init   git submodule update   hugo server   Then your project will load without errors.\n","permalink":"https://elvisfinol.github.io/blog/posts/how-to-fix-layout-no-found-in-hugo/","summary":"You have a theme you added as a git submodule and you recently re-cloned your project. In order to fix this, your submodule needs to be re-downloaded as well.\nRun the following commands:\ngit submodule init   git submodule update   hugo server   Then your project will load without errors.","title":"How to fix the error `found no layout file for “HTML” for “page”` in Hugo?"},{"content":"Al utilizar el protocolo SSH, puedes conectar y autenticar a servidores remotos y servicios. La ventaja para el caso de GitHub es que no necesitas suministrar “username” y “personal token” en cada deploy.\nComandos Paso 1: Generar llave SSH\nAsegúrate que Git Bash esta abierto. Para generar una llave SSH ejecuta este comando:\n$ ssh-keygen -t rsa -b 4096 -C \u0026quot;ejemplo@ejemplo.com\u0026quot;\n(NO olvides reemplazar el email “ejemplo@ejemplo.com” por tu email real)\nPaso 2: Uso de llave ** Ahora que la llave esta generada, vamos a utilizarla! Primero debemos iniciar el agente de SSH ejecutando:\n$ eval $(ssh-agent -s)\nUna vez iniciado el agente, vamos a agregar la llave que hemos generado. Ten en cuenta que si seleccionas un path diferente al default, debes cambiarlo en el comando:\n$ ssh-add ~/.ssh/id_rsa\n****Paso 3: Agregar llave SSH en GitHub\nAhora que tenemos la llave ssh configurada en nuestra PC, procedemos agregarla en GitHub. Para ello puedes ejecutar este comando para copiarla y luego pegarla en GitHub.\n$ clip \u0026lt; ~/.ssh/id_rsa.pub\nVe a las Settings en tu GitHub, en el sidebar haz click en “SSH and GPG Keys”\nHaz click en “New SSH Key”\nEn title puedes colocar la descripción, por ejemplo “Mi computador personal” y seguidamente vas a pegar tu llave en “Key”.\nLuego haces click en “Add SSH key”, te pedirá las credenciales de tu cuenta en GitHub. Al llegar a este punto tu llave ha sido agregada y puedes empezar a hacer push desde tu repositorio remoto a GitHub. 🙂\n","permalink":"https://elvisfinol.github.io/blog/posts/configurando-ssh-con-github-windows/","summary":"Al utilizar el protocolo SSH, puedes conectar y autenticar a servidores remotos y servicios. La ventaja para el caso de GitHub es que no necesitas suministrar “username” y “personal token” en cada deploy.\nComandos Paso 1: Generar llave SSH\nAsegúrate que Git Bash esta abierto. Para generar una llave SSH ejecuta este comando:\n$ ssh-keygen -t rsa -b 4096 -C \u0026quot;ejemplo@ejemplo.com\u0026quot;\n(NO olvides reemplazar el email “ejemplo@ejemplo.com” por tu email real)","title":"Configurando SSH con GitHub (Windows)"},{"content":"","permalink":"https://elvisfinol.github.io/blog/archive/","summary":"archive","title":"Archive"},{"content":"","permalink":"https://elvisfinol.github.io/blog/search/","summary":"search","title":"Search"}]